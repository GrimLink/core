@define-mixin input {
  margin: 0;
  border: var(--textfieldBorder);
  border-radius: var(--textfieldBorderRadius);
  background: var(--textfieldBackground);
  font-family: inherit;
  font-size: inherit;
  font-weight: 400;
  line-height: inherit;
  color: var(--textfieldColor);
  letter-spacing: 0.5px;
  outline: none;
  transition: border-color 0.1s ease-out, color 0.1s ease-out, box-shadow 0.1s ease-out, background-color 0.1s ease-out;

  &::-webkit-datetime-edit-text {
    opacity: 0.3;
  }

  &::-webkit-calendar-picker-indicator {
    color: var(--textfieldColor);
  }

  &::-webkit-calendar-picker-indicator:hover {
    background-color: transparent;
  }

  &::selection {
    background-color: var(--textfieldSelectionBackground);
    color: var(--textfieldSelectionForeground);
  }

  &::-moz-selection {
    background-color: var(--textfieldSelectionBackground);
    color: var(--textfieldSelectionForeground);
  }

  &::placeholder {
    color: var(--textfieldPlaceholderColor);
  }

  &:hover {
    border: var(--textfieldHoverBorder);
    background: var(--textfieldHoverBackground);
    color: var(--textfieldHoverColor);

    &::placeholder {
      color: var(--textfieldHoverPlaceholderColor);
    }
  }

  &:focus {
    border: var(--textfieldFocusBorder);
    background: var(--textfieldFocusBackground);
    box-shadow: 0 0 0 var(--textfieldOutlineWidth) var(--textfieldOutlineColor);
    color: var(--textfieldFocusColor);

    &::placeholder {
      color: var(--textfieldFocusPlaceholderColor);
    }
  }

  &:disabled,
  &[aria-disabled] {
    border: var(--textfieldDisabledBorder);
    background: var(--textfieldDisabledBackground);
    color: var(--textfieldDisabledColor);

    &::placeholder {
      color: var(--textfieldDisabledPlaceholderColor);
    }
  }

  &[readonly] {
    color: var(--textfieldReadonlyColor);

    &::placeholder {
      color: var(--textfieldDisabledPlaceholderColor);
    }
  }

  &:disabled {
    cursor: not-allowed;
  }

  &:required {
    &:valid {
      color: var(--textfieldValidColor);
      background: var(--textfieldValidBackground);
      border: var(--textfieldValidBorder);

      &:focus {
        box-shadow: 0 0 0 var(--textfieldOutlineWidth) var(--textfieldValidOutlineColor);
      }
    }

    &:invalid {
      color: var(--textfieldInvalidColor);
      background: var(--textfieldInvalidBackground);
      border: var(--textfieldInvalidBorder);

      &:focus {
        box-shadow: 0 0 0 var(--textfieldOutlineWidth) var(--textfieldInvalidOutlineColor);
      }
    }
  }
}
